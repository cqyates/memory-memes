{"version":3,"sources":["Components/ImageCard/index.js","Components/Container/index.js","Components/Jumbotron/index.js","Components/Nav/index.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","onClick","shuffleCards","id","alt","name","src","image","width","height","Container","children","Jumbotron","Nav","console","log","topScore","score","cardsClicked","App","state","cards","cardShuffle","_this","sort","Math","random","setState","includes","push","_this2","this","Components_Container","Components_Nav","Components_Jumbotron","map","Components_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"myBAgBeA,MAZf,SAAmBC,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAML,EAAMM,aAAaN,EAAMO,MAC9CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,MAAOC,MAAM,MAAMC,OAAO,kBCFpDC,MAJf,SAAmBd,GACjB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaJ,EAAMe,iBCG5BC,MAJf,SAAmBhB,GACjB,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaJ,EAAMe,WCY3BE,SAbH,SAACjB,GAEX,OADAkB,QAAQC,IAAInB,GAEVC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,2BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,cACcJ,EAAMoB,SADpB,aACwCpB,EAAMqB,iBCHhDC,EAAe,GAmDJC,6MAhDbC,MAAQ,CACNC,QACAL,SAAU,EACVC,MAAO,KAGTf,aAAe,SAAAC,GACb,IAAMmB,EAAcC,EAAKH,MAAMC,MAAMG,KAAK,kBAAMC,KAAKC,SAAW,KAChEH,EAAKI,SAAS,CACZN,MAAOC,IAELJ,EAAaU,SAASzB,IACpBoB,EAAKH,MAAMJ,SAAWO,EAAKH,MAAMH,OACnCM,EAAKI,SAAS,CACZX,SAAUO,EAAKH,MAAMH,QAGzBM,EAAKI,SAAS,CACZV,MAAO,IAETC,EAAe,KAEfA,EAAaW,KAAK1B,GAClBoB,EAAKI,SAAS,CACZV,MAAOM,EAAKH,MAAMH,MAAQ,8EAKvB,IAAAa,EAAAC,KAEP,OADAjB,QAAQC,IAAIgB,KAAKX,OAEfvB,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,CAAKjB,SAAUe,KAAKX,MAAMJ,SAAUC,MAAOc,KAAKX,MAAMH,QACtDpB,EAAAC,EAAAC,cAACmC,EAAD,sCACCH,KAAKX,MAAMC,MAAMc,IAAI,SAAAd,GAAK,OACzBxB,EAAAC,EAAAC,cAACqC,EAAD,CACElC,aAAc4B,EAAK5B,aACnBC,GAAIkB,EAAMlB,GACVkC,IAAKhB,EAAMlB,GACXI,MAAOc,EAAMd,kBAzCP+B,mBCJlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.078a6fcf.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"card\">\n      <span onClick={() => props.shuffleCards(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} width=\"170\" height=\"170\" />\n      </div>\n      </span>\n    </div>\n  );\n}\n\nexport default ImageCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron(props) {\n  return <h1 className=\"jumbotron\">{props.children}</h1>;\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nconst Nav = (props)=>{\n  console.log(props)\n  return (\n    <div className=\"navbar\">\n      <div className=\"col-xl-4 h3\">Clicky Game</div>\n      <div className=\"col-xl-4 h3\">Click an image to Begin</div>\n      <div className=\"col-xl-4 h3\">\n        Top Score: {props.topScore} | Score: {props.score}\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport ImageCard from \"./Components/ImageCard\";\nimport Container from \"./Components/Container\";\nimport Jumbotron from \"./Components/Jumbotron\";\nimport Nav from \"./Components/Nav\";\nimport cards from \"./data.json\";\n\nlet cardsClicked = []\n\nclass App extends Component {\n  state = {\n    cards,\n    topScore: 0,\n    score: 0\n  };\n  //FIXME there might be an issue here with shuffleCards vs cardShuffle \n  shuffleCards = id => {\n    const cardShuffle = this.state.cards.sort(() => Math.random() - 0.5);\n    this.setState({\n      cards: cardShuffle\n    });\n    if (cardsClicked.includes(id)) {\n      if (this.state.topScore < this.state.score) {\n        this.setState({\n          topScore: this.state.score\n        });\n      }\n      this.setState({\n        score: 0\n      });\n      cardsClicked = [];\n    } else {\n      cardsClicked.push(id);\n      this.setState({\n        score: this.state.score + 1\n      });\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <Container>\n        <Nav topScore={this.state.topScore} score={this.state.score} />\n        <Jumbotron>Memory Memes Futurama Edition</Jumbotron>\n        {this.state.cards.map(cards => (\n          <ImageCard\n            shuffleCards={this.shuffleCards}\n            id={cards.id}\n            key={cards.id}\n            image={cards.image}\n          />\n        ))}\n      </Container>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}